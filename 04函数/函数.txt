函数
	函数简介
		函数也是一个对象
		对象是内存中专门用来存储数据的一块区域，函数可以用来保存一些可执行的代码，并且可以在需要时，对这些语句进行多次的调用
		创建函数: 
			def 函数名([形参1,形参2,...形参n]) :
				代码块
			函数名必须要符号标识符的规范（可以包含字母，数字，下划线，但是不能以数字开头）
		函数中保存的代码不会立即执行，需要调用函数代码才会执行
		调用函数：
		    函数对象()
		    定义函数一般都是要实现某种功能的

    函数的参数
        在定义函数时，可以在函数名后的()中定义数量不等的形参，多个形参之间使用,隔开
        形参（形式参数）
            定于形参就相当于函数内部声明了变量，但并不赋值
        实参（实际参数）
            如果函数定义时，指定了形参，那么在调用函数时也必须传递实参，实参将会赋值给对应的形参，有几个形参就需要几个实参。

    函数式编程
        在Python中，函数是一等对象
        一等对象一般都会具有如下特点：
            1.对象是在运行时创建的
            2.能赋值给变量或作为数据结构中的元素
            3.能作为参数传递
            4.能作为返回值返回
        高阶函数
            高阶函数至少要符合以下两个特点中的一个
                1.接收一个或多个函数作为参数
                2.将函数作为返回值返回
        闭包
            将函数作为返回值返回，也是一种高阶函数，成为闭包
            形成闭包的要件
                1.函数嵌套
                2.将内部函数作为返回值返回
                3.内部函数必须要使用到外部函数的变量
        装饰器
            通过装饰器，可以不修改原来函数的情况下对函数进行扩展
            在定义函数时，可以通过@装饰器，来使用指定的装饰器，来装饰当前的函数
                可以同时为一个函数指定多个装饰器，这样函数将会安装从内向外的顺序被装饰
            装饰器案例：
            def begin_end(old):
                # 创建一个新函数
                def new_function(*args,**kwargs):
                    print("开始执行...")
                    # 调用被扩展的函数
                    result = old(*args,**kwargs)
                    print("执行结束...")
                    # 返回函数的执行结果
                    return result
                # 返回新函数
                return new_function
